version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - APP_ENV=production
    container_name: crm_manager_app
    restart: unless-stopped
    volumes:
      - ./storage:/var/www/html/storage
      - ./bootstrap/cache:/var/www/html/bootstrap/cache
      - ./docker/nginx/tls:/etc/nginx/tls:ro  # SSL certificates
      - php_sessions:/tmp/php_sessions
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://${DOMAIN}
      - DB_CONNECTION=pgsql
      - DB_HOST=pgsql
      - DB_PORT=5432
      - DB_DATABASE=${DB_NAME}
      - DB_USERNAME=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - QUEUE_CONNECTION=redis
      - SESSION_DRIVER=redis
      - CACHE_DRIVER=redis
      - ENV_SUPERVISOR_PASSWORD=${SUPERVISOR_PASSWORD}
      - ENV_NUM_WORKERS=${QUEUE_WORKERS:-4}
      - ENV_ENABLE_HORIZON=${ENABLE_HORIZON:-false}
    networks:
      - backend
      - frontend  # Separate network for public traffic
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  pgsql:
    image: postgres:15-alpine
    container_name: crm_manager_db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - pg_backups:/backups
    networks:
      - backend
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: crm_manager_redis
    restart: unless-stopped
    command: >
      redis-server 
      --maxmemory 1gb
      --maxmemory-policy allkeys-lru
      --save ""
    volumes:
      - redis_data:/data
    networks:
      - backend
    deploy:
      resources:
        limits:
          memory: 1G
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Traefik for reverse proxy and TLS termination (recommended)
  traefik:
    image: traefik:v2.10
    container_name: traefik
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik:/etc/traefik
    networks:
      - frontend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  php_sessions:
    driver: local
  pg_backups:
    driver: local

networks:
  backend:
    internal: true  # No external access
  frontend:
    driver: bridge

# secrets:
#   db_password:
#     file: ./secrets/db_password.txt
#   redis_password:
#     file: ./secrets/redis_password.txt
#   supervisor_password:
#     file: ./secrets/supervisor_password.txt